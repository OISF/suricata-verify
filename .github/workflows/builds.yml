name: builds

on:
  - push
  - pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  
  pcapng-check:
    name: PCAP Check
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - run: ./pcapng-check.sh
      - run: ./pcap-check.sh

  isolate-tests:
    name: Isolate relevant tests
    runs-on: ubuntu-22.04
    outputs:
      test_names: ${{ steps.fetch_changed_files.fnames }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: fetch_changed_files
        run: |
          case '${{ github.event_name }}' in
            push)
              firstCommit='${{ github.event.commits[0].id }}'
              lastCommit='${{ github.event.commits[-1].id }}'
              ;;
            pull_request)
              firstCommit='${{ github.event.base_ref }}'
              lastCommit='${{ github.event.head_ref }}'
              ;;
          esac
          fnames=$(git diff --name-only --diff-filter=d "${firstCommit}~1" "${lastCommit}")
          echo fnames # STODO remove
          echo fnames >> "$GITHUB_OUTPUT"

  ubuntu-22-04:
    name: Ubuntu 22.04
    runs-on: ubuntu-22.04
    container: ubuntu:22.04
    needs: isolate-tests
    strategy:
      fail-fast: false
      matrix:
        branch:
          - main
          - main-7.0.x
          - main-8.0.x
    steps:
      - name: Install dependencies
        run: |
          apt update
          apt -y install \
                autoconf \
                automake \
                build-essential \
                cargo \
                git \
                jq \
                libpcre3 \
                libpcre3-dev \
                libpcre2-dev \
                libtool \
                libpcap-dev \
                libnet1-dev \
                libyaml-0-2 \
                libyaml-dev \
                libcap-ng-dev \
                libcap-ng0 \
                liblua5.1-dev \
                libmagic-dev \
                libnetfilter-queue-dev \
                libnetfilter-queue1 \
                libnfnetlink-dev \
                libnfnetlink0 \
                libhiredis-dev \
                libjansson-dev \
                libevent-dev \
                libevent-pthreads-2.1-7 \
                libjansson-dev \
                libpython2.7 \
                libnss3-dev \
                libssl-dev \
                make \
                parallel \
                python3-distutils \
                python3-jsonschema \
                python3-yaml \
                rustc \
                software-properties-common \
                zlib1g \
                zlib1g-dev
      - run: cargo install --locked --force --debug cbindgen
      - run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - uses: actions/checkout@v3
      - run: python3 ./run.py --self-test
      - run: git clone https://github.com/OISF/suricata -b ${{ matrix.branch }}
      - run: git clone https://github.com/OISF/libhtp suricata/libhtp
      - name: Build Suricata
        working-directory: suricata
        run: |
          ./autogen.sh
          ./configure --enable-lua --enable-debug-validation
          make -j2
      - name: Running suricata-verify
        working-directory: suricata
        run: python3 ../run.py ${{ needs.isolate-tests.outputs.test_names }} --quiet --outdir /tmp/sv-output

  almalinux:
    name: AlmaLinux 8
    runs-on: ubuntu-latest
    container: almalinux:8
    strategy:
      fail-fast: false
      matrix:
        branch:
          - main
          - main-7.0.x
          - main-8.0.x
    steps:
      - name: Install dependencies
        run: |
          yum -y install dnf-plugins-core
          yum config-manager --set-enabled powertools
          yum -y install \
                autoconf \
                automake \
                cargo-vendor \
                diffutils \
                file-devel \
                gcc \
                gcc-c++ \
                git \
                jansson-devel \
                jq \
                lua-devel \
                libtool \
                libyaml-devel \
                libnfnetlink-devel \
                libnetfilter_queue-devel \
                libnet-devel \
                libcap-ng-devel \
                libevent-devel \
                libmaxminddb-devel \
                libpcap-devel \
                openssl-devel \
                libtool \
                lz4-devel \
                make \
                nss-devel \
                pcre-devel \
                pcre2-devel \
                pkgconfig \
                python3-devel \
                python3-jsonschema \
                python3-yaml \
                rust-toolset \
                sudo \
                which \
                zlib-devel
      - run: cargo install --locked --force --debug cbindgen
      - run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH
      - uses: actions/checkout@v3
      - run: python3 ./run.py --self-test
      - run: git clone https://github.com/OISF/suricata -b ${{ matrix.branch }}
      - run: git clone https://github.com/OISF/libhtp suricata/libhtp
      - name: Build Suricata
        working-directory: suricata
        run: |
          ./autogen.sh
          ./configure --enable-lua --enable-debug-validation
          make -j2
      - name: Running suricata-verify
        working-directory: suricata
        run: python3 ../run.py --quiet

  macos:
    name: macOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        branch:
          - main
          - main-7.0.x
          - main-8.0.x
    steps:
      - name: Install dependencies
        run: |
         brew install \
          autoconf \
          automake \
          cbindgen \
          curl \
          hiredis \
          hwloc \
          jansson \
          jq \
          libmagic \
          libnet \
          libtool \
          libyaml \
          pcre2 \
          pkg-config \
          python \
          rust \
          xz
      - uses: actions/checkout@v3
      - name: Create Python virtual environment
        run: python3 -m venv ./testenv
      - name: Install PyYAML
        run: |
          . ./testenv/bin/activate
          pip install pyyaml
      - run: |
          . ./testenv/bin/activate
          python3 ./run.py --self-test
      - run: git clone https://github.com/OISF/suricata -b ${{ matrix.branch }}
      - run: git clone https://github.com/OISF/libhtp suricata/libhtp
      - name: Build Suricata
        working-directory: suricata
        run: |
          ./autogen.sh
          CPATH="$HOMEBREW_PREFIX/include:$CPATH" LIBRARY_PATH="$HOMEBREW_PREFIX/lib:$LIBRARY_PATH" PATH="/opt/homebrew/opt/libtool/libexec/gnubin:$PATH" CFLAGS="${DEFAULT_CFLAGS}" ./configure --enable-warnings --enable-unittests --prefix="$HOME/.local/"
          CPATH="$HOMEBREW_PREFIX/include:$CPATH" LIBRARY_PATH="$HOMEBREW_PREFIX/lib:$LIBRARY_PATH" PATH="/opt/homebrew/opt/libtool/libexec/gnubin:$PATH" make -j2
      - name: Running suricata-verify
        working-directory: suricata
        run: |
          . ../testenv/bin/activate
          python3 ../run.py --quiet

  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        branch:
          - main
          - main-7.0.x
          - main-8.0.x
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Cache ~/.cargo
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57
        with:
          path: ~/.cargo/registry
          key: cargo-registry
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ucrt64
          update: true
          install: |
            autoconf
            automake
            git
            make
            mingw-w64-ucrt-x86_64-cbindgen
            mingw-w64-ucrt-x86_64-jansson
            mingw-w64-ucrt-x86_64-jq
            mingw-w64-ucrt-x86_64-libpcap
            mingw-w64-ucrt-x86_64-libtool
            mingw-w64-ucrt-x86_64-libyaml
            mingw-w64-ucrt-x86_64-pcre2
            mingw-w64-ucrt-x86_64-python-yaml
            mingw-w64-ucrt-x86_64-rust
            mingw-w64-ucrt-x86_64-toolchain
            unzip
      - uses: actions/checkout@v3
      - run: git clone https://github.com/OISF/suricata -b ${{ matrix.branch }}
      - run: git clone https://github.com/OISF/libhtp suricata/libhtp
      - name: Build Suricata
        working-directory: suricata
        run: |
          ./autogen.sh
          ./configure
          make -j3
      - name: Running suricata-verify
        working-directory: suricata
        run: python3 ../run.py --quiet
